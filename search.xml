<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ssh 远程连接 docker 容器</title>
      <link href="/2023/09/26/docs-docker-ssh/"/>
      <url>/2023/09/26/docs-docker-ssh/</url>
      
        <content type="html"><![CDATA[<h1 id="ssh-远程连接-docker-容器"><a href="#ssh-远程连接-docker-容器" class="headerlink" title="ssh 远程连接 docker 容器"></a>ssh 远程连接 docker 容器</h1><h3 id="创建和运行容器"><a href="#创建和运行容器" class="headerlink" title="创建和运行容器"></a>创建和运行容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建容器</span></span><br><span class="line">docker run -itd --gpus all --name &lt;container_name&gt; -p &lt;your_port&gt;:22 -v &lt;host_dir_name&gt;:/home &lt;image_name&gt; /bin/bash</span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker start &lt;container_name&gt; &amp; docker <span class="built_in">exec</span> -it &lt;container_name&gt; bash</span><br></pre></td></tr></table></figure><h3 id="容器内配置"><a href="#容器内配置" class="headerlink" title="容器内配置"></a>容器内配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改root用户密码(必须要有)</span></span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装ssh</span></span><br><span class="line">apt update</span><br><span class="line">apt install ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改ssh配置文件</span></span><br><span class="line">vim /etc/ssh/sshd_config  </span><br><span class="line"><span class="comment"># 将PermitRootLogin 设置为yes  #允许root用户使用ssh登录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动sshd服务</span></span><br><span class="line">/etc/init.d/ssh restart </span><br></pre></td></tr></table></figure><h3 id="连接容器"><a href="#连接容器" class="headerlink" title="连接容器"></a>连接容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip：宿主机ip</span><br><span class="line">端口号：第一步的 &lt;your_port&gt;</span><br><span class="line">用户名：root</span><br><span class="line">密码：passwd设置的密码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux clash 配置文档</title>
      <link href="/2023/09/21/docs_linux-clash/"/>
      <url>/2023/09/21/docs_linux-clash/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器docker容器配置clash"><a href="#服务器docker容器配置clash" class="headerlink" title="服务器docker容器配置clash"></a>服务器docker容器配置clash</h1><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建容器</span></span><br><span class="line">docker run -itd --name zwx-clash --gpus all -p 20002:7890 -v /home/zwx/zwx-clash:/home ubuntu</span><br><span class="line"><span class="comment"># 启动和进入容器</span></span><br><span class="line">docker start zwx-clash &amp;&amp; docker <span class="built_in">exec</span> -it zwx-clash bash</span><br></pre></td></tr></table></figure><h3 id="安装clash"><a href="#安装clash" class="headerlink" title="安装clash"></a>安装clash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install wget</span><br><span class="line"><span class="built_in">cd</span> home</span><br><span class="line"><span class="comment"># 下面这一步如果下载不成功，就在自己电脑上下载了传过来</span></span><br><span class="line">wget https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-linux-amd64-v1.18.0.gz</span><br><span class="line">gunzip clash-linux-amd64-v1.18.0.gz</span><br><span class="line"><span class="built_in">chmod</span> +x clash-linux-amd64-v1.18.0</span><br><span class="line"><span class="built_in">ln</span> -s clash-linux-amd64-v1.18.0 clash</span><br></pre></td></tr></table></figure><h3 id="配置clash"><a href="#配置clash" class="headerlink" title="配置clash"></a>配置clash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将自己的clash配置文件复制到clash同目录下，并重命名为config.yaml</span></span><br><span class="line"><span class="built_in">mv</span> xxx.yml config.yaml</span><br><span class="line"><span class="comment"># 下面这一步如果下载不成功，就在自己电脑上下载了传过来</span></span><br><span class="line">wget https://cdn.jsdelivr.net/npm/geolite2-country@1.0.2/GeoLite2-Country.mmdb.gz</span><br><span class="line">guzip GeoLite2-Country.mmdb.gz</span><br><span class="line"><span class="built_in">mv</span> GeoLite2-Country.mmdb Country.mmdb</span><br></pre></td></tr></table></figure><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/image-20230921160814478.png" alt="image-20230921160814478"> </p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clash所在文件夹下</span></span><br><span class="line">./clash -d .</span><br></pre></td></tr></table></figure><p> <img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/image-20230921160847022.png" alt="image-20230921160847022"></p><h3 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每次开启终端都要执行一次</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:7890</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若能成功下载，则配置成功</span></span><br><span class="line">wget https://huggingface.co/microsoft/phi-1_5/resolve/main/README.md</span><br></pre></td></tr></table></figure><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台运行</span></span><br><span class="line"><span class="built_in">nohup</span> /home/clash -d /home &gt; /dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="comment"># 查看后台进程</span></span><br><span class="line">ps -aux|grep clash</span><br><span class="line"><span class="comment"># 停止后台进程</span></span><br><span class="line"><span class="built_in">kill</span> 进程pid</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>alias 文档</title>
      <link href="/2023/09/21/docs_alias/"/>
      <url>/2023/09/21/docs_alias/</url>
      
        <content type="html"><![CDATA[<h1 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h1><p>输入一长串包含许多选项的命令会非常麻烦。因此，大多数 shell 都支持设置别名。shell 的别名相当于一个长命令的缩写，shell 会自动将其替换成原本的命令。例如，bash 中的别名语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias alias_name=&quot;command_to_alias arg1 arg2&quot;</span><br></pre></td></tr></table></figure><p>注意， <code>=</code>两边是没有空格的，因为 <a href="https://www.man7.org/linux/man-pages/man1/alias.1p.html"><code>alias</code></a> 是一个 shell 命令，它只接受一个参数。</p><p>别名有许多很方便的特性:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看现有的别名</span></span><br><span class="line"><span class="built_in">alias</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建常用命令的缩写</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&quot;ls -lh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 能够少输入很多</span></span><br><span class="line"><span class="built_in">alias</span> gs=<span class="string">&quot;git status&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gc=<span class="string">&quot;git commit&quot;</span></span><br><span class="line"><span class="built_in">alias</span> v=<span class="string">&quot;vim&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 手误打错命令也没关系</span></span><br><span class="line"><span class="built_in">alias</span> sl=<span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新定义一些命令行的默认行为</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&quot;mv -i&quot;</span>           <span class="comment"># -i prompts before overwrite</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mkdir</span>=<span class="string">&quot;mkdir -p&quot;</span>     <span class="comment"># -p make parent dirs as needed</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">df</span>=<span class="string">&quot;df -h&quot;</span>           <span class="comment"># -h prints human readable format</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 别名可以组合使用</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">&quot;ls -A&quot;</span></span><br><span class="line"><span class="built_in">alias</span> lla=<span class="string">&quot;la -l&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略某个别名</span></span><br><span class="line">\<span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 或者禁用别名</span></span><br><span class="line"><span class="built_in">unalias</span> la</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取别名的定义</span></span><br><span class="line"><span class="built_in">alias</span> ll</span><br><span class="line"><span class="comment"># 会打印 ll=&#x27;ls -lh&#x27;</span></span><br></pre></td></tr></table></figure><p>值得注意的是，在默认情况下 shell 并不会保存别名。为了让别名持续生效，您需要将配置放进 shell 的启动文件里，像是<code>.bashrc</code> 或 <code>.zshrc</code>。</p><p><code>sudo vim ~/.bashrc</code>文件末尾加入要持续生效的命令即可。</p><h3 id="个人常用的别名"><a href="#个人常用的别名" class="headerlink" title="个人常用的别名"></a>个人常用的别名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> sau=<span class="string">&#x27;sudo apt update&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> sai=<span class="string">&#x27;sudo apt install&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> bashrc=<span class="string">&#x27;sudo vim ~/.bashrc&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> s=<span class="string">&#x27;sudo&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> sds=<span class="string">&#x27;sudo docker start&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> sde=<span class="string">&#x27;sudo docker exec -it&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gc=<span class="string">&#x27;git clone&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>conda 文档</title>
      <link href="/2023/09/21/docs_conda/"/>
      <url>/2023/09/21/docs_conda/</url>
      
        <content type="html"><![CDATA[<h2 id="创建Anaconda-环境"><a href="#创建Anaconda-环境" class="headerlink" title="创建Anaconda 环境"></a>创建Anaconda 环境</h2><p>创建环境前需要对conda进行换源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.condarc</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">ssl_verify: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>保存并退出(:wq)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建Anaconda 环境</span></span><br><span class="line">conda create --name &lt;env_name&gt; &lt;package_names&gt;</span><br><span class="line"><span class="comment"># ex: conda create -n python3 python=3.8 numpy pandas</span></span><br><span class="line"><span class="comment"># ex: conda create -n hugging_face python=3.7.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看现有环境</span></span><br><span class="line">conda <span class="built_in">env</span> list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换环境</span></span><br><span class="line">conda activate &lt;env_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出环境</span></span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cmake 文档</title>
      <link href="/2023/09/21/docs_cmake/"/>
      <url>/2023/09/21/docs_cmake/</url>
      
        <content type="html"><![CDATA[<p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/image-20230413011019341.png" alt="image-20230413011019341"></p><blockquote><p>编写项目代码的步骤</p></blockquote><p>1、新建一个文件夹，用于存放你的项目文件，并且用vscode打开它。</p><p>2、新建一个include文件夹，用于存放所有的头文件，注意头文件的编写注意点。</p><p>3、新建一个src文件夹，用于存放所有的源文件。</p><p>4、根目录下放一个main.cc，用来编写main函数。</p><p>5、写好cmake lists文件，存放在根目录。</p><p>6、执行以下命令，进行编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个build文件夹，用于存放cmake编译信息，不用自己管</span></span><br><span class="line">mkdir build </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入build文件夹</span></span><br><span class="line">cd build    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">调用cmake工具，“..”表示cmake lists文件所在的路径。</span></span><br><span class="line">cmake ..     </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行编译链接，得到可执行文件，会自动存放在build文件夹中</span></span><br><span class="line">make          </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行可执行文件（程序）</span></span><br><span class="line">./tjurm_tutorial </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>exec.cmd</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">if exist build (</span><br><span class="line">    echo build exist</span><br><span class="line">) else (</span><br><span class="line">    mkdir build</span><br><span class="line">)</span><br><span class="line">cd build</span><br><span class="line">cmake -G &quot;MinGW Makefiles&quot; ..</span><br><span class="line">mingw32-make</span><br><span class="line">exe_cmake</span><br></pre></td></tr></table></figure><blockquote><p>CMakeLists.txt</p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span>) </span><br><span class="line"><span class="comment"># 项目名称</span></span><br><span class="line"><span class="keyword">project</span>(exe_cmake)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置编译器</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER <span class="string">&quot;gcc&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER <span class="string">&quot;g++&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># c++版本为c++11，</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="comment"># 编译类型:Debug(调试), Release(发布)</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_BUILD_TYPE RELEASE)                               </span><br><span class="line"><span class="comment"># C++编译选项(优化程度为-O3)</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -w -O3 -g&quot;</span>)         </span><br><span class="line"></span><br><span class="line"><span class="comment"># 头文件所在的目录</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有的源文件路径</span></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE sources <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/src/*.cpp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可执行文件包含的源文件</span></span><br><span class="line"><span class="keyword">add_executable</span>(exe_cmake main.cc <span class="variable">$&#123;sources&#125;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker 文档</title>
      <link href="/2023/09/21/docs_docker/"/>
      <url>/2023/09/21/docs_docker/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --gpus all --name name -v /home/zwx/name:/home ubuntu</span><br><span class="line">docker exec -it name bash</span><br></pre></td></tr></table></figure><p>安装python3.9</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line"><span class="comment"># &quot;software-properties-common&quot; 是一个软件包，该软件包提供了一些常用的工具和功能，用于管理软件源（repositories）和 PPA（Personal Package Archive）。</span></span><br><span class="line">apt-get install software-properties-common </span><br><span class="line"><span class="comment"># Install py39 from deadsnakes repository</span></span><br><span class="line">add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">apt-get install python3<span class="number">.9</span> python3-pip</span><br></pre></td></tr></table></figure><h2 id="镜像（image）"><a href="#镜像（image）" class="headerlink" title="镜像（image）"></a>镜像（image）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看镜像文件</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像文件</span></span><br><span class="line">docker rmi 镜像文件<span class="built_in">id</span></span><br></pre></td></tr></table></figure><h2 id="容器（container）"><a href="#容器（container）" class="headerlink" title="容器（container）"></a>容器（container）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看运行中的容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有容器的编号</span></span><br><span class="line">docker ps -q </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动并进入容器(镜像文件名)</span></span><br><span class="line">docker run -it ubuntu /bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">退出容器（停止）</span></span><br><span class="line">exit</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">退出容器（不停止）</span></span><br><span class="line">ctrl + P + Q</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器（如果从这个容器退出，容器不会停止）</span></span><br><span class="line">docker exec -it ubuntu01 /bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除容器 (无法删除正在运行的容器，强制删除 <span class="built_in">rm</span> -f)</span></span><br><span class="line">docker rm 容器id</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除所有容器</span></span><br><span class="line">docker rm -f $(docker ps -aq) </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动容器</span></span><br><span class="line">docker start 容器id</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新启动容器</span></span><br><span class="line">docker restart 容器id</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止正在运行的容器</span></span><br><span class="line">docker stop 容器id</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制停止正在运行的容器</span></span><br><span class="line">docker kill 容器id</span><br></pre></td></tr></table></figure><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清屏</span></span><br><span class="line">clear</span><br><span class="line">ctrl + L</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">返回主目录</span></span><br><span class="line">cd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动容器</span></span><br><span class="line">docker start python01</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器</span></span><br><span class="line">docker exec -it python01 python3</span><br></pre></td></tr></table></figure><h2 id="容器连接"><a href="#容器连接" class="headerlink" title="容器连接"></a>容器连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个 python 应用的容器</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-P :是容器内部端口随机映射到主机的端口</span></span><br><span class="line">docker run -d -P training/webapp python app.py</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p : 是容器内部端口绑定到指定的主机端口</span></span><br><span class="line">docker run -d -p 5000:5000 training/webapp python app.py</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定容器绑定的网络地址</span></span><br><span class="line">docker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看端口的绑定情况(adoring_stonebraker为容器名)，输出：127.0.0.1:5001</span></span><br><span class="line">docker port adoring_stonebraker 5000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Docker 容器互联</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个新的 Docker 网络（-d：参数指定 Docker 网络类型，有 bridge、overlay）</span></span><br><span class="line">docker network create -d bridge test-net</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前网络</span></span><br><span class="line">docker network ls</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行一个容器并连接到新建的 test-net 网络</span></span><br><span class="line">docker run -itd --name test1 --network test-net ubuntu /bin/bash</span><br></pre></td></tr></table></figure><h2 id="docker中使用nginx镜像布置静态网站"><a href="#docker中使用nginx镜像布置静态网站" class="headerlink" title="docker中使用nginx镜像布置静态网站"></a>docker中使用nginx镜像布置静态网站</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.导入nginx镜像</span></span><br><span class="line">[root@docker1 images]# docker load -i nginx.tar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.运行nginx容器</span></span><br><span class="line">[root@docker1 images]# docker run -it --name  vm1 nginx bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.容器内设置</span></span><br><span class="line">root@e0d6fcaf179d:/# cd /usr/share/nginx/html</span><br><span class="line">root@e0d6fcaf179d:/usr/share/nginx/html # echo www.orange_lei.com &gt; index.html </span><br><span class="line">root@e0d6fcaf179d:/usr/share/nginx/html # cat index.html</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">www.orange_lei.com</span></span><br><span class="line">root@e0d6fcaf179d:/usr/share/nginx/html # cd /usr/sbin/</span><br><span class="line">root@e0d6fcaf179d:/usr/sbin # ./nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在容器内首先编辑网页html信息，然后启动nginx</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.查看nginx容器ip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按下ctrl+p然后按ctrl+q就可以将容器打入后台</span></span><br><span class="line">[root@docker1 images]# docker inspect vm1            ##可以查看具体信息</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5.测试</span></span><br><span class="line">[root@docker1 images]# curl 172.17.0.2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">www.orange_lei.com</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这样一个静态网页就部署好了</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">容器外</span></span><br><span class="line">docker run -d --name nginx01 -v /home/zwx/volume/nginx:/home -p 20101:80 nginx</span><br><span class="line">docker exec -it nginx01 /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">容器内</span></span><br><span class="line">cd /usr/share/nginx/html</span><br><span class="line">apt update</span><br><span class="line">apt install vim</span><br><span class="line">vim index.html</span><br><span class="line">nginx</span><br><span class="line">exit</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看挂载是否成功</span></span><br><span class="line">docker inspect nginx01</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止和开始</span></span><br><span class="line">docker stop nginx01</span><br><span class="line">docker start nginx01</span><br><span class="line">docker exec -it nginx01 /bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更改文件</span></span><br><span class="line">cp /home/index.html /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure><h3 id="ubuntu-01"><a href="#ubuntu-01" class="headerlink" title="ubuntu_01"></a>ubuntu_01</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装python</span></span><br><span class="line">apt update</span><br><span class="line">apt-get install python3</span><br><span class="line">python3 -V</span><br><span class="line">python3</span><br><span class="line">ctrl + D</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">换源</span></span><br><span class="line">apt-get install vim</span><br><span class="line">vim /etc/apt/sources.list</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">清华源</span></span><br><span class="line"> deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"> deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"> deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"> deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"> deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line">apt update</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yolov5</span></span><br><span class="line">apt install git</span><br><span class="line">git clone https://github.com/ultralytics/yolov5.git</span><br><span class="line">apt install python3-pip</span><br><span class="line">pip3 -V</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git 文档</title>
      <link href="/2023/09/21/docs_git/"/>
      <url>/2023/09/21/docs_git/</url>
      
        <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p><a href="https://blog.csdn.net/bjbz_cxy/article/details/116703787?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168879325716800211587219%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168879325716800211587219&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-116703787-null-null.142%5Ev88%5Econtrol,239%5Ev2%5Einsert_chatgpt&utm_term=git%20&spm=1018.2226.3001.4187">link</a></p><h2 id="Gitee上传代码"><a href="#Gitee上传代码" class="headerlink" title="Gitee上传代码"></a>Gitee上传代码</h2><h3 id="1首次上传"><a href="#1首次上传" class="headerlink" title="1首次上传"></a>1首次上传</h3><p>1.1在Gitee上创建远程仓库git_test</p><p>1.2配置用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;zwx&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;1728026380@qq.com&quot;</span></span><br><span class="line"><span class="comment"># 检查配置</span></span><br><span class="line"><span class="comment"># git config user.name</span></span><br><span class="line"><span class="comment"># git config user.email</span></span><br></pre></td></tr></table></figure><p>1.3本地仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入本地项目目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化本地仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加项目目录下所有文件至暂存区</span></span><br><span class="line">git add . </span><br><span class="line"><span class="comment"># 查看当前git状态</span></span><br><span class="line"><span class="comment"># git status</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&#x27;本次提交的说明&#x27;</span></span><br></pre></td></tr></table></figure><p>1.4远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在远程仓库复制http链接</span></span><br><span class="line"><span class="comment"># 如 https://gitee.com/zxmh/git_test.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地仓库与远程仓库相连接</span></span><br><span class="line">git remote add origin https://gitee.com/zxmh/git_test.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地仓库中的文件推送至远程仓库中</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="2继续上传"><a href="#2继续上传" class="headerlink" title="2继续上传"></a>2继续上传</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">&#x27;本次提交的说明&#x27;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="3拉取上传"><a href="#3拉取上传" class="headerlink" title="3拉取上传"></a>3拉取上传</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/zxmh/git_test.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传</span></span><br><span class="line"><span class="built_in">cd</span> git_test</span><br><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">&#x27;本次提交的说明&#x27;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="log"><a href="#log" class="headerlink" title="log"></a>log</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示日志</span></span><br><span class="line">git <span class="built_in">log</span> </span><br><span class="line"><span class="comment"># 图形化显示日志</span></span><br><span class="line">git <span class="built_in">log</span> --all --graph --decorate</span><br><span class="line"><span class="comment"># 更紧凑的视图（最好用）</span></span><br><span class="line">git <span class="built_in">log</span> --all --graph --decorate --oneline</span><br></pre></td></tr></table></figure><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前状态与上一次commit的不同</span></span><br><span class="line">git diff</span><br><span class="line"><span class="comment"># 显示当前状态与commit1的不同</span></span><br><span class="line">git diff commit1</span><br></pre></td></tr></table></figure><h2 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch name</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout name</span><br><span class="line"><span class="comment"># 创建并切换分支</span></span><br><span class="line">git checkout -b name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 查看分支详细信息</span></span><br><span class="line">git branch -vv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并name分支到当前分支上来</span></span><br><span class="line">git merge name</span><br></pre></td></tr></table></figure><h2 id="remote"><a href="#remote" class="headerlink" title="remote"></a>remote</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看本地仓库的远程仓库</span></span><br><span class="line">git remote </span><br><span class="line"><span class="comment"># 添加远程仓库（origin是远程仓库的约定俗成的名字）（url可以是网址或者本地路径）</span></span><br><span class="line">git remote add &lt;name&gt; &lt;url&gt;</span><br><span class="line"><span class="comment"># 上传</span></span><br><span class="line">git push &lt;remote name&gt; &lt;<span class="built_in">local</span> branch&gt;:&lt;remote branch&gt;</span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;url&gt; &lt;<span class="built_in">dir</span> name&gt;</span><br><span class="line"><span class="comment"># 不获取版本历史信息，更加快速</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;url&gt; &lt;<span class="built_in">dir</span> name&gt; --shallow</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步远程仓库的更改到本地</span></span><br><span class="line">git fetch &lt;remote name&gt;</span><br><span class="line"><span class="comment"># 同步远程仓库的更改到本地并与当前分支合并</span></span><br><span class="line">git pull &lt;remote name&gt;</span><br></pre></td></tr></table></figure><h2 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将工作目录恢复到上一次提交的状态</span></span><br><span class="line">git stash</span><br><span class="line"><span class="comment"># 撤回stash的恢复</span></span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/zxmh/git_test.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch name</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout name</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> git_test</span><br><span class="line"><span class="comment"># 将当前文件夹加入到暂存区</span></span><br><span class="line">git add . </span><br><span class="line"><span class="comment"># 提交到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&#x27;本次提交的说明&#x27;</span></span><br><span class="line"><span class="comment"># 提交到远程仓库</span></span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示日志</span></span><br><span class="line">git <span class="built_in">log</span> --all --graph --decorate --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新远程仓库</span></span><br><span class="line">git fetch --all</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 命令文档</title>
      <link href="/2023/09/21/docs_linux/"/>
      <url>/2023/09/21/docs_linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Unix-x2F-Linux-命令参考"><a href="#Unix-x2F-Linux-命令参考" class="headerlink" title="Unix&#x2F;Linux 命令参考"></a>Unix&#x2F;Linux 命令参考</h1><h2 id="文件命令"><a href="#文件命令" class="headerlink" title="文件命令"></a>文件命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ls – # 列出目录</span><br><span class="line">ls -al – # 使用格式化列出隐藏文件</span><br><span class="line">cd dir - # 更改目录到 dir</span><br><span class="line">cd # 更改到 home 目录</span><br><span class="line">pwd # 显示当前目录</span><br><span class="line">mkdir dir # 创建目录 dir</span><br><span class="line">rm file # 删除 file</span><br><span class="line">rm -r dir # 删除目录 dir</span><br><span class="line">rm -f file # 强制删除 file</span><br><span class="line">rm -rf dir # 强制删除目录 dir *</span><br><span class="line">cp file1 file2 # 将 file1 复制到 file2</span><br><span class="line">cp -r dir1 dir2 # 将 dir1 复制到 dir2; 如果 dir2 不存在则创建它</span><br><span class="line">mv file1 file2 # 将 file1 重命名或移动到 file2; 如果file2 是一个存在的目录则将 file1 移动到目录 file2 中</span><br><span class="line">ln -s file link # 创建 file 的符号连接 link</span><br><span class="line">touch file # 创建 file</span><br><span class="line">cat &gt; file # 将标准输入添加到 file</span><br><span class="line">more file # 查看 file 的内容</span><br><span class="line">head file # 查看 file 的前 10 行</span><br><span class="line">tail file # 查看 file 的后 10 行</span><br><span class="line">tail -f file # 从后 10 行开始查看 file 的内容</span><br></pre></td></tr></table></figure><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps <span class="comment"># 显示当前的活动进程</span></span><br><span class="line">top <span class="comment"># 显示所有正在运行的进程</span></span><br><span class="line"><span class="built_in">kill</span> pid <span class="comment"># 杀掉进程 id pid</span></span><br><span class="line">killall proc <span class="comment"># 杀掉所有名为 proc 的进程 *</span></span><br><span class="line"><span class="built_in">bg</span> <span class="comment"># 列出已停止或后台的作业</span></span><br><span class="line"><span class="built_in">fg</span> <span class="comment"># 将最近的作业带到前台</span></span><br><span class="line"><span class="built_in">fg</span> n <span class="comment"># 将作业 n 带到前台</span></span><br></pre></td></tr></table></figure><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chmod octal file # 更改 file 的权限</span><br><span class="line">● 4 – 读 (r)</span><br><span class="line">● 2 – 写 (w)</span><br><span class="line">● 1 – 执行 (x)</span><br><span class="line">示例:</span><br><span class="line">chmod 777 # 为所有用户添加读、写、执行权限</span><br><span class="line">chmod 755 # 为所有者添加 rwx 权限, 为组和其他用户添加</span><br><span class="line">rx 权限</span><br><span class="line">更多选项参阅 man chmod.</span><br></pre></td></tr></table></figure><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh user@host # 以 user 用户身份连接到 host</span><br><span class="line">ssh -p port user@host # # 在端口 port 以 user 用户身份连接到 host</span><br><span class="line">ssh-copy-id user@host # 将密钥添加到 host 以实现无密码登录</span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep pattern files # 搜索 files 中匹配 pattern 的内容</span><br><span class="line">grep -r pattern dir # 递归搜索 dir 中匹配 pattern 的内容</span><br><span class="line">command | grep pattern # 搜索 command 输出中匹配pattern 的内容</span><br></pre></td></tr></table></figure><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">date # 显示当前日期和时间</span><br><span class="line">cal # 显示当月的日历</span><br><span class="line">uptime # 显示系统从开机到现在所运行的时间</span><br><span class="line">w # 显示登录的用户</span><br><span class="line">whoami # 查看你的当前用户名</span><br><span class="line">finger user # 显示 user 的相关信息</span><br><span class="line">uname -a # 显示内核信息</span><br><span class="line">cat /proc/cpuinfo # 查看 cpu 信息</span><br><span class="line">cat /proc/meminfo # 查看内存信息</span><br><span class="line">man command # 显示 command 的说明手册</span><br><span class="line">df # 显示磁盘占用情况</span><br><span class="line">du # 显示目录空间占用情况</span><br><span class="line">free # 显示内存及交换区占用情况</span><br></pre></td></tr></table></figure><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar cf file.tar files # 创建包含 files 的 tar 文件 file.tar</span><br><span class="line">tar xf file.tar # 从 file.tar 提取文件</span><br><span class="line">tar czf file.tar.gz files # 使用 Gzip 压缩创建tar 文件</span><br><span class="line">tar xzf file.tar.gz # 使用 Gzip 提取 tar 文件</span><br><span class="line">tar cjf file.tar.bz2 # 使用 Bzip2 压缩创建 tar 文件</span><br><span class="line">tar xjf file.tar.bz2 # 使用 Bzip2 提取 tar 文件</span><br><span class="line">gzip file # 压缩 file 并重命名为 file.gz</span><br><span class="line">gzip -d file.gz # 将 file.gz 解压缩为 file</span><br></pre></td></tr></table></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ping host <span class="comment"># ping host 并输出结果</span></span><br><span class="line">whois domain <span class="comment"># 获取 domain 的 whois 信息</span></span><br><span class="line">dig domain <span class="comment"># 获取 domain 的 DNS 信息</span></span><br><span class="line">dig -x host <span class="comment"># 逆向查询 host</span></span><br><span class="line">wget file <span class="comment"># 下载 file</span></span><br><span class="line">wget -c file <span class="comment"># 断点续传</span></span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">从源代码安装:</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">dpkg -i pkg.deb # 安装包 (Debian)</span><br><span class="line">rpm -Uvh pkg.rpm # 安装包 (RPM)</span><br></pre></td></tr></table></figure><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+C # 停止当前命令</span><br><span class="line">Ctrl+Z # 停止当前命令，并使用 fg 恢复</span><br><span class="line">Ctrl+D # 注销当前会话，与 exit 相似</span><br><span class="line">Ctrl+W # 删除当前行中的字</span><br><span class="line">Ctrl+U # 删除整行</span><br><span class="line">!! # 重复上次的命令</span><br><span class="line">exit # 注销当前会话</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu 换源文档</title>
      <link href="/2023/09/21/docs_ubuntu/"/>
      <url>/2023/09/21/docs_ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu换源"><a href="#ubuntu换源" class="headerlink" title="ubuntu换源"></a>ubuntu换源</h1><p>通常我们使用ubunntu虚拟机的时候总是出现网络过慢导致的更新下载失败等问题</p><p>原因：Ubuntu默认的服务器是在国外，自然连接就很慢。</p><p>国内有许多可用的镜像源，只需要更改镜像源，就能从国内的镜像源下载你需要的软件、工具等。 推荐使用清华镜像源，如果需要使用其他镜像源可以查询相关镜像官网，并更换对应的镜像源码即可，操作步骤都如下。</p><p>下面介绍更换清华镜像源的方法</p><p>1.打开Ubuntu的控制台（快捷键ctrl+Alt T）</p><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Yaw5bGx5Li25LiA6KeS,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="img"></p><p>2.进入 &#x2F;etc&#x2F;apt&#x2F;路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/apt/</span><br></pre></td></tr></table></figure><p>3.将sources.list备份保存为sources.backup.list,以防止有需要的时候更换回来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -a sources.list sources.backup.list</span><br></pre></td></tr></table></figure><p>4.打开<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华镜像</a>官方,在搜索框输入ubuntu ,点击ubuntu旁边的小问号</p><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Yaw5bGx5Li25LiA6KeS,size_20,color_FFFFFF,t_70,g_se,x_16-16849501606703.png" alt="img"></p><p> 5.根据相应的版本复制镜像源码，查看ubuntu版本</p><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/b070f8ab61b74615bdb0c8847802f02b.png" alt="img"></p><blockquote><p>nx是arm架构，这里要使用ubuntu-ports镜像</p></blockquote><p>查看版本方法： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/issue</span><br></pre></td></tr></table></figure><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Yaw5bGx5Li25LiA6KeS,size_10,color_FFFFFF,t_70,g_se,x_16.png" alt="img"></p><p>这里我的版本号是：21.10，需要在清华网站上选择相应的版本后再复制镜像源码</p><p> 6.打开sources.list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit sources.list</span><br></pre></td></tr></table></figure><p>7.将sources.list内的内容清空，粘贴刚刚复制的镜像源，并保存（save）</p><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Yaw5bGx5Li25LiA6KeS,size_20,color_FFFFFF,t_70,g_se,x_16-168495025259310.png" alt="img"></p><p>8.更新镜像源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Yaw5bGx5Li25LiA6KeS,size_20,color_FFFFFF,t_70,g_se,x_16-168495027843013.png" alt="img"></p><blockquote><p>转载自<a href="https://blog.csdn.net/qq_57171795/article/details/123109463">ubuntu更改镜像源</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vim 文档</title>
      <link href="/2023/09/21/docs_vim/"/>
      <url>/2023/09/21/docs_vim/</url>
      
        <content type="html"><![CDATA[<p>vim个人常用命令</p><ol><li>必要的</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim filename <span class="comment"># 使用vim编辑文件（不存在会创建）</span></span><br><span class="line">i <span class="comment"># 进入insert模式（normal）</span></span><br><span class="line">Esc <span class="comment"># 返回normal模式（insert）</span></span><br><span class="line">ctrl+<span class="built_in">shift</span>+v <span class="comment"># 粘贴（insert）</span></span><br><span class="line">:wq <span class="comment"># 保存并退出（normal）</span></span><br><span class="line">:q <span class="comment"># 不保存直接退出（normal）</span></span><br><span class="line">:q! <span class="comment"># 不保存强制退出（normal）</span></span><br><span class="line">:w <span class="comment"># 保存但不退出</span></span><br></pre></td></tr></table></figure><ol start="2"><li>高效的</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">G <span class="comment"># 调到最后一行（normal）</span></span><br><span class="line">o <span class="comment"># 在光标所在行的下插入新的一行（normal）与G配合实现文档尾部添加!</span></span><br><span class="line"></span><br><span class="line">ctrl + d <span class="comment"># 向下翻半屏（normal）</span></span><br><span class="line">行号+G <span class="comment"># 快速定位光标到指定行（normal）</span></span><br><span class="line">gg <span class="comment"># 调到首行（normal）</span></span><br><span class="line">ctrl + u <span class="comment"># 向上翻半屏（normal）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="comment"># 剪切（删除）（normal）</span></span><br><span class="line">p <span class="comment"># 粘贴（normal）</span></span><br><span class="line">yy <span class="comment"># 复制（normal）</span></span><br><span class="line">u <span class="comment"># 撤销（normal）</span></span><br><span class="line">crtl+r <span class="comment"># 重做（normal）</span></span><br><span class="line"></span><br><span class="line">/内容 <span class="comment"># 搜索内容</span></span><br><span class="line">N/n <span class="comment"># 在搜索结果中切换上/下一个结果</span></span><br><span class="line"></span><br><span class="line">:s/要替换的关键词/替换后的关键词<span class="comment"># 只替换光标所在这一行的第一个满足条件的结果</span></span><br><span class="line">:%s/要替换的关键词/替换后的关键词/g <span class="comment"># 替换全部的关键词</span></span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> nu <span class="comment"># 显示行号</span></span><br><span class="line">:<span class="built_in">set</span> nonu <span class="comment"># 隐藏行号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制多行操作</span></span><br><span class="line"><span class="comment"># 第一步：在命令模式下，直接按小v，进入可视化模式</span></span><br><span class="line"><span class="comment"># 第二步：使用方向键↑ ↓ ← →选择要复制的内容，然后按y键</span></span><br><span class="line"><span class="comment"># 第三步：移动光标，停在需要粘贴的位置，按p键进行粘贴操作</span></span><br></pre></td></tr></table></figure><h1 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h1><h3 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h3><table><thead><tr><th>i</th><th>光标前插入( insert)</th></tr></thead><tbody><tr><td>I</td><td>在行首插入</td></tr><tr><td>a</td><td>在光标前插入(append)</td></tr><tr><td>A</td><td>在行尾插入</td></tr><tr><td>o</td><td>在下一行插入(one line)</td></tr><tr><td>O</td><td>在上一行插入</td></tr><tr><td>ESC</td><td>jjCapslok 退出插入模式</td></tr></tbody></table><h3 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h3><table><thead><tr><th>v</th><th>进入</th></tr></thead><tbody><tr><td>ESCv</td><td>退出</td></tr></tbody></table><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p>： 进入</p><p>ESC 退出</p><h1 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h1><p>普通模式下：</p><p>h ←j ↓k ↑l →</p><table><thead><tr><th>w</th><th align="left">跳到下一个单词开头(word)</th></tr></thead><tbody><tr><td>b</td><td align="left">跳到本单词或下一个单词结尾(back)</td></tr><tr><td>e</td><td align="left">跳到本单词或上一个单词开头(end)</td></tr><tr><td>ge</td><td align="left">跳到上一个单词结尾</td></tr><tr><td>0</td><td align="left">跳到行首</td></tr><tr><td>^</td><td align="left">跳到从行首开始第一个非空字符</td></tr><tr><td>$</td><td align="left">跳到行尾</td></tr><tr><td>gg</td><td align="left">跳到第一行</td></tr><tr><td>G</td><td align="left">跳到最后一行</td></tr></tbody></table><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/01b485d5d0a109664019ee84c7e0370b.png" alt="image-20220203144707592"> </p><h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h1><p><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/af4ca98a31f2f538109af9a10b4863ec.png" alt="image-20220203145538127"> </p><h1 id="操作符-动作"><a href="#操作符-动作" class="headerlink" title="操作符+动作"></a>操作符+动作</h1><table><thead><tr><th>p</th><th>粘贴</th></tr></thead><tbody><tr><td>u</td><td>撤销动作+操作符</td></tr><tr><td>ciw</td><td>选中单词删除并进入插入模式</td></tr><tr><td>yiw</td><td>选中并复制单词</td></tr><tr><td>diw</td><td>选中并删除单词</td></tr><tr><td>ndd&#x2F;ncc&#x2F;nyy</td><td>向下删除&#x2F;修改&#x2F;复制n行,包括当前行</td></tr><tr><td>d&#x2F;c&#x2F;yf{char}</td><td>删除&#x2F;修改&#x2F;复制到向后的char字符</td></tr><tr><td>d&#x2F;c&#x2F;y ^&#x2F;$</td><td>删除&#x2F;修改&#x2F;复制到开头&#x2F;结尾</td></tr><tr><td>die</td><td>删除整个文件</td></tr><tr><td>cie</td><td>删除整个文件并进入写入模式</td></tr></tbody></table><p>v+各种操作（可以看到啥被选中了）+操作符（y&#x2F;c&#x2F;d）</p><h1 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h1><img src="https://zwx-pic.oss-cn-beijing.aliyuncs.com/img/3a6cb9f53dde063073ae57117d3daa80.png" alt="image-20220203155235967" style="zoom: 50%;" /> ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的文档网站</title>
      <link href="/2023/09/20/docs/"/>
      <url>/2023/09/20/docs/</url>
      
        <content type="html"><![CDATA[<h1 id="我的文档网站"><a href="#我的文档网站" class="headerlink" title="我的文档网站"></a>我的文档网站</h1><p><a href="http://zxmh.gitee.io/note">http://zxmh.gitee.io/note</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Realsense D435i 深度相机 hsv 调参代码</title>
      <link href="/2023/06/20/realsense%20hsv/"/>
      <url>/2023/06/20/realsense%20hsv/</url>
      
        <content type="html"><![CDATA[<h2 id="Realsense-D435i-深度相机-hsv-调参代码"><a href="#Realsense-D435i-深度相机-hsv-调参代码" class="headerlink" title="Realsense D435i 深度相机 hsv 调参代码"></a>Realsense D435i 深度相机 hsv 调参代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> util_3 <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nothing</span>(<span class="params">x</span>):</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cv2.namedWindow(&#x27;image&#x27;,cv2.WINDOW_AUTOSIZE)</span></span><br><span class="line">cv2.namedWindow(<span class="string">&#x27;image&#x27;</span>,cv2.WINDOW_FREERATIO)</span><br><span class="line">cv2.resizeWindow(<span class="string">&#x27;image&#x27;</span>, (<span class="number">640</span>, <span class="number">320</span>))</span><br><span class="line"><span class="comment"># blue = np.uint8([[[255,0,0]]])</span></span><br><span class="line"><span class="comment"># hsv_blue = cv2.cvtColor(blue,cv2.COLOR_BGR2HSV)</span></span><br><span class="line"><span class="comment"># print(hsv_blue)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;Hue min&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">100</span>,<span class="number">255</span>,nothing)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;Hue max&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">124</span>,<span class="number">255</span>,nothing)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;sat min&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">43</span>,<span class="number">255</span>,nothing)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;sat max&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">255</span>,<span class="number">255</span>,nothing)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;val min&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">46</span>,<span class="number">255</span>,nothing)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;val max&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">255</span>,<span class="number">255</span>,nothing)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line">W, H = <span class="number">640</span>, <span class="number">480</span> <span class="comment"># 图像宽高</span></span><br><span class="line"><span class="comment"># W, H = 1280, 720 # 图像宽高</span></span><br><span class="line">FPS = <span class="number">30</span> <span class="comment"># 帧率</span></span><br><span class="line">MAX_LENGTH = <span class="number">1000</span> <span class="comment"># 区分正面和侧面轮廓所使用的空间长度</span></span><br><span class="line">RED = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>) <span class="comment"># 红色</span></span><br><span class="line">BLUE = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="comment"># 蓝色</span></span><br><span class="line">GREEN = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>) <span class="comment"># 绿色</span></span><br><span class="line"><span class="comment"># 设置hsv阈值</span></span><br><span class="line">lower_blue = np.array([<span class="number">240</span>, <span class="number">33</span>, <span class="number">40</span>])</span><br><span class="line"><span class="comment"># lower_blue = np.array([100, 43, 46])</span></span><br><span class="line">upper_blue = np.array([<span class="number">250</span>, <span class="number">255</span>, <span class="number">255</span>])</span><br><span class="line"><span class="comment"># upper_blue = np.array([124, 255, 255])</span></span><br><span class="line">lower_red = np.array([<span class="number">0</span>, <span class="number">33</span>, <span class="number">40</span>])</span><br><span class="line">upper_red = np.array([<span class="number">10</span>, <span class="number">255</span>, <span class="number">255</span>])</span><br><span class="line"><span class="comment"># 创建一个管道</span></span><br><span class="line">pipeline = rs.pipeline() </span><br><span class="line"><span class="comment"># 配置要流式传输的管道</span></span><br><span class="line">config = rs.config()</span><br><span class="line">config.enable_stream(rs.stream.color, W, H, rs.<span class="built_in">format</span>.bgr8, <span class="number">30</span>) <span class="comment"># 8位rgb图像</span></span><br><span class="line">config.enable_stream(rs.stream.depth, W, H, rs.<span class="built_in">format</span>.z16, <span class="number">30</span>) <span class="comment"># 16位深度图像</span></span><br><span class="line"><span class="comment"># 左右双目</span></span><br><span class="line">config.enable_stream(rs.stream.infrared, <span class="number">1</span>, W, H, rs.<span class="built_in">format</span>.y8, <span class="number">30</span>) <span class="comment"># 8位左红外图像</span></span><br><span class="line">config.enable_stream(rs.stream.infrared, <span class="number">2</span>, W, H, rs.<span class="built_in">format</span>.y8, <span class="number">30</span>) <span class="comment"># 8位右红外图像</span></span><br><span class="line">align = rs.align(rs.stream.color)</span><br><span class="line"><span class="comment"># 视野大，但有残缺</span></span><br><span class="line"><span class="comment"># align = rs.align(rs.stream.depth)</span></span><br><span class="line"><span class="comment"># 开始传输帧</span></span><br><span class="line">profile = pipeline.start(config)</span><br><span class="line"><span class="comment"># 更改rgb相机的曝光值</span></span><br><span class="line">color_sensor = profile.get_device().first_color_sensor()</span><br><span class="line">depth_sensor = profile.get_device().first_depth_sensor()</span><br><span class="line"><span class="comment"># 关闭自动曝光</span></span><br><span class="line">color_sensor.set_option(rs.option.enable_auto_exposure, <span class="number">0</span>)</span><br><span class="line">depth_sensor.set_option(rs.option.enable_auto_exposure, <span class="number">0</span>)</span><br><span class="line"><span class="comment"># 设置曝光值</span></span><br><span class="line">color_sensor.set_option(rs.option.exposure, <span class="number">25</span>)</span><br><span class="line">depth_sensor.set_option(rs.option.exposure, <span class="number">15000</span>)</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">depth_sensor = profile.get_device().first_depth_sensor()</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">depth_scale = depth_sensor.get_depth_scale()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 等待开启通道</span></span><br><span class="line">    frames = pipeline.wait_for_frames()</span><br><span class="line">    <span class="comment"># 将深度图和RGB图对齐</span></span><br><span class="line">    <span class="comment"># frames = align.process(frames)</span></span><br><span class="line">    <span class="comment"># 获得RGB图像</span></span><br><span class="line">    color_frame = frames.get_color_frame()</span><br><span class="line">    <span class="comment"># 未获得RGB图像</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> color_frame:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 获得深度图像</span></span><br><span class="line">    <span class="comment"># depth_frame = frames.get_depth_frame()</span></span><br><span class="line">    <span class="comment"># 把图像像素转化为数组</span></span><br><span class="line">    color_image = np.asanyarray(color_frame.get_data())</span><br><span class="line">    <span class="comment"># depth_image = np.asanyarray(depth_frame.get_data())</span></span><br><span class="line">    <span class="comment"># 深度图像转化为伪彩色图像(alpha数值越大对比度色差越大)</span></span><br><span class="line">    <span class="comment"># depth_colormap = cv2.applyColorMap(cv2.convertScaleAbs(depth_image, alpha=0.21), cv2.COLORMAP_JET)</span></span><br><span class="line">    <span class="comment"># 转换到HSV (颜色空间转换) (色调H，饱和度S，亮度V)</span></span><br><span class="line">    <span class="comment"># hsv = cv2.cvtColor(color_image, cv2.COLOR_BGR2HSV)</span></span><br><span class="line"></span><br><span class="line">    img = color_image</span><br><span class="line">    hsv = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)</span><br><span class="line">    h_min = cv2.getTrackbarPos(<span class="string">&#x27;Hue min&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    h_max = cv2.getTrackbarPos(<span class="string">&#x27;Hue max&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    s_min = cv2.getTrackbarPos(<span class="string">&#x27;sat min&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    s_max = cv2.getTrackbarPos(<span class="string">&#x27;sat max&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    v_min = cv2.getTrackbarPos(<span class="string">&#x27;val min&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    v_max = cv2.getTrackbarPos(<span class="string">&#x27;val max&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    lower = np.array([h_min,s_min,v_min])</span><br><span class="line">    upper = np.array([h_max,s_max,v_max])</span><br><span class="line">    mask = cv2.inRange(hsv,lower,upper)</span><br><span class="line">    res = cv2.bitwise_and(img,img,mask=mask)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># cv2.imshow(&#x27;img&#x27;,img)</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;mask&#x27;</span>,mask)</span><br><span class="line">    <span class="comment"># cv2.imshow(&#x27;res&#x27;,res)</span></span><br><span class="line"> </span><br><span class="line">    k = cv2.waitKey(<span class="number">5</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> k == <span class="number">27</span>:</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"> </span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/18/hello-world/"/>
      <url>/2023/06/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
